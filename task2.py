# -*- coding: utf-8 -*-
"""TASK2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/183tGdQtYUKCbaXoUnDQQx8Cv_wOJS1-h
"""

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, classification_report
import matplotlib.pyplot as plt
import seaborn as sns
#reading the csv file

df = pd.read_csv("spam.csv", encoding='ISO-8859-1')

print(df)

df['v1'] = df['v1'].map({'ham': 0, 'spam': 1})
print(df)
df.isnull().sum()

#  Train/Test Split
X_train, X_test, y_train, y_test = train_test_split(df['v2'], df['v1'], test_size=0.2, random_state=42)



#  TF-IDF Vectorization
vectorizer = TfidfVectorizer(stop_words='english', max_features=5000)
X_train_tfidf = vectorizer.fit_transform(X_train)
X_test_tfidf = vectorizer.transform(X_test)

#  Train Logistic Regression Model
log_reg = LogisticRegression(max_iter=1000)
log_reg.fit(X_train_tfidf, y_train)

#  Evaluation
y_pred = log_reg.predict(X_test_tfidf)
acc = accuracy_score(y_test, y_pred)

print(f"üîç Logistic Regression Accuracy: {acc:.4f}")
print(classification_report(y_test, y_pred))

# Predict 50 Random Messages

import random

# Select 50 random samples from the test set
sample_indices = random.sample(range(len(X_test)), 50)
sample_messages = X_test.iloc[sample_indices].tolist()
true_labels = y_test.iloc[sample_indices].tolist()

# Vectorize and predict
sample_tfidf = vectorizer.transform(sample_messages)
predictions = log_reg.predict(sample_tfidf)

# Display results
print("\nüì® Predictions for 50 Random SMS Messages:\n")
for i in range(50):
    print(f"üîπ Message {i+1}: {sample_messages[i]}")
    print(f"   ‚û§ Predicted: {'Spam' if predictions[i] == 1 else 'Ham'} | Actual: {'Spam' if true_labels[i] == 1 else 'Ham'}\n")